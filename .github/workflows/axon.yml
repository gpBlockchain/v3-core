name: Manual Trigger

on:
  # 手动触发事件
  workflow_dispatch:
    inputs:
      GitUrlForAxon:
        description: 'Axon -git url'
        default: 'https://github.com/nervosnetwork/axon.git'
      GitBranchForAxon:
        description: 'axon  -git branch'
        default: 'main'
      StartAxon:
        description: 'start axon'
        default: 'true'
      TestScript:
        description: 'test:axon_test'
        default: 'test:axon_test'
#    inputs:
#      logLevel:
#        description: 'Log level'
#        required: true
#        default: 'warning'
#      tags:
#        description: 'Test scenario tags'
#
# jobs:
#  printInputs:
#    runs-on: ubuntu-latest
#    steps:
#      - run: |
#          echo "GitUrlForKit level: ${{ github.event.inputs.GitUrlForKit }}"
#          echo "GitBranchForKit: ${{ github.event.inputs.GitBranchForKit }}"
#          echo "TestScript: ${{ toJson(github.event.TestScript) }}"


jobs:
  #  start-godwoken:
  #    runs-on: ubuntu-latest
  #    steps:
  #      - run: echo "Part 1. Deploy Local Network of Godwoken"
  #      - name: Clone source code
  #        run: |
  #          git clone -b compatibility-changes https://github.com/RetricSu/godwoken-kicker.git
  #          cd godwoken-kicker
  #          ./kicker init
  #          ./kicker start
  #          ./kicker info
  #          ./kicker ps

  contract-tests:
    strategy:
      fail-fast: false
      matrix:
        net: ['testnet_v1']
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # This is required separately from yarn test because it generates the typechain definitions
      - name: Compile
        run: yarn compile
      - run: echo "Part 2. Deploy Local Network of Axon"
      - name: Clone source code
        run: |
          if [ ${{ github.event.inputs.StartAxon }} == "true" ];then
            git clone -b ${{ github.event.inputs.GitBranchForAxon }} ${{ github.event.inputs.GitUrlForAxon }}
            cd axon
            cargo build
            ./target/debug/axon init --config devtools/chain/config.toml --chain-spec devtools/chain/specs/single_node/chain-spec.toml > /tmp/log 2>&1
            ./target/debug/axon run --config devtools/chain/config.toml >> /tmp/log 2>&1 &
          fi
      - name: Run tests
        id: runtest
        run: |
          yarn test:prepare
          yarn ${{ github.event.inputs.TestScript }}
      - name: check godwoken status
        if: success() || failure()
        run: |
          curl http://localhost:8000 -X POST -H "Content-Type: application/json" -d '{"jsonrpc":"2.0","method":"web3_clientVersion","params": [],"id":1}'
      - name: Generate report
        if: success() || failure()
        run: |
          mkdir public
          cp -r mochawesome-report/* public
      - name: Deploy report page to GitHub Page
        uses: peaceiris/actions-gh-pages@v3
        if: success() || failure()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
