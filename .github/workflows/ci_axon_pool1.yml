name: ci_axon_pool

on:
  push:
    branches:
      - main
  pull_request:


jobs:
  contract-tests:
    strategy:
      fail-fast: false
      matrix:
        net: ['testnet_v1']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"


      - name: Install dependencies
        run: yarn install

      # This is required separately from yarn test because it generates the typechain definitions
      - name: Compile
        run: yarn compile

      - name: Deploy Local Network of Axon
        run: |
          git clone https://github.com/nervosnetwork/axon.git
          cd axon
          cargo build
          ./target/debug/axon init --config devtools/chain/config.toml --chain-spec devtools/chain/specs/single_node/chain-spec.toml > /tmp/log 2>&1
          ./target/debug/axon run --config devtools/chain/config.toml >> /tmp/log 2>&1 &
      - name: Run tests 0
        id: runtest
        run: |
          yarn test:prepare
          yarn test:UniswapV3Pool11
      - name: Run test 1
        if: success() || failure()
        run: |
          yarn test:UniswapV3Pool12
      - name: Run test 2
        if: success() || failure()
        run: |
          yarn test:UniswapV3Pool13
      - name: check axon status
        if: success() || failure()
        run: |
          curl http://localhost:8000 -X POST -H "Content-Type: application/json" -d '{"jsonrpc":"2.0","method":"web3_clientVersion","params": [],"id":1}'

      - name: check axon log
        if: success() || failure()
        run: |
          tail -n 100 axon/chain.log
      - name: Publish reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: jfoa-build-reports-${{ runner.os }}
          path: mochawesome-report/
